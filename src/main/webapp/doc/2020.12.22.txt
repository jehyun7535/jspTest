서버환경

서버환경의 이해

전용 client프로그램 - 속도가 빠르다
database만 공유허고 ui,business로직은 client 프로그램에 탑재
client간 통신이 힘듬/ 보안문제

서버환경의 이해 - 제한사항

브라우저 기능에 의존 -> 제한적인 UI
브라우저 기능을 벗어나는 추가기능 사용사 호환성/보안문제
모든 브라우저가 동일한 기능을 제공하지 않음
같은 브라우저의 버전별 호환 문제

client server architecture와 web architecture비교
wep architecture의 장점
앞으로 개발시 필요한환경들
형상관리의 필요성 이해

servlet : 자바의 웹 개발 표준 스펙, 스펙에 따라 만들어진소스 멀티 쓰레드로 실행
jsp : 실행 코드 방식인 servlet의 스크립트 방식의 표준 스펙
jsp는 실행시 serlvet으로 변환되어 실행

Web Application Server : WAS (jboss, IBM 웹스피어)
	Servlet Container + EJB Container

servlet container [wep container] (tomcat)

전자우편을 위한 인터넷 표준 포맷
* 간이 전자 우편 전송 프로토콜
* SMTP에서는 기본적으로 7비트 기준 아스키 코드만 전송 가능
- 영어가 아닌 외국어, 특수기호, 이미지, 파일전송을 위해서는 인코딩이 필요 =>MIME

Maven Project
Group id :해당 프로젝트를 진행하는 회사에 대한 정보 일반적으로 
회사의 도메인 역순으로 기술 
naver.com ==> ,moc.revan
	==> com.naver
google. com==> com.gogle
ddit.or.kr ==> kr.or.ddit 

Artufact id : Group id에 해당하는 회사에서 진행하는 포르젝트명
	google : GMAIL, GOOGOLE DRIVE
version : 프로젝트의 버전 대.중.소 3.5.2

jav : Java ARchive : 클래스들을 묶어 놓은 파일, 압축파일

class, html, jsp, image, css ,javascript
war : webArchive : 웹 프로그램을  묶어 놓은 파일
     tomcat의 webapps 폴더에 war 파일을 복사 해놓고 톰캣을 기동하면
war 파일을 톰캣이 자동으로 압축을 해제하여 웹 어플리케이션이 서비스 되도록한다

pom : Project Object Model - 프로젝트에 대한 설정 정보
	해당 프로젝트를 만든 회사
	프로젝트 이름
	프로젝트의 버전
	프로젝트에서 필요로하는 의존성(dependency) - 라이브러리(object6.jar)
pom.xml










